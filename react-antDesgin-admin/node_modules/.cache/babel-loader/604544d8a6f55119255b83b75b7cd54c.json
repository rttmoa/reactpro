{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\reactpro\\\\react-antDesgin-admin\\\\src\\\\components\\\\layout\\\\SiderBar.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Menu, Icon, Layout } from 'antd';\nimport menuConfig from '../../config/menuConfig';\nimport logoURL from '../../images/logo.jpeg';\nimport { connect } from 'react-redux';\nimport { switchMenu } from '../../redux/action';\nconst Sider = Layout.Sider;\nconst SubMenu = Menu.SubMenu;\n\nclass SiderBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDefaultSelect = () => {\n      let menuConfigKeys = [];\n      menuConfig.forEach(item => {\n        menuConfigKeys.push(item.key);\n      }); // console.log(menuConfigKeys) //  ['/', '/user', '/tool', '/route']\n\n      const pathname = window.location.pathname;\n      console.log(pathname);\n      console.log(pathname.split('/')[1]);\n      const currentKey = '/' + pathname.split('/')[1];\n      const titleArray = this.selectBreadcrumb(currentKey, pathname);\n\n      if (menuConfigKeys.indexOf(currentKey) === 1) {\n        this.setState({\n          defaultOpenKeys: [currentKey],\n          defaultSelectedKeys: [pathname]\n        });\n        this.props.handleClick(titleArray);\n      }\n    };\n\n    this.setMenu = (menu, pItem) => {\n      return menu.map(item => {\n        if (item.children) {\n          return React.createElement(SubMenu, {\n            key: item.key,\n            title: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              type: item.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, item.title)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, this.setMenu(item.children, item));\n        }\n\n        return React.createElement(Menu.Item, {\n          title: item.title,\n          key: item.key,\n          pitem: pItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: item.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, item.icon && React.createElement(Icon, {\n          type: item.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, item.title)));\n      });\n    };\n\n    this.selectBreadcrumb = (currentKey, pathname) => {\n      const titleArray = [];\n      menuConfig.forEach(item => {\n        if (item.key === currentKey) {\n          titleArray.push(item.title);\n        }\n\n        if (item.children) {\n          item.children.forEach(sItem => {\n            if (sItem.key === pathname) {\n              titleArray.push(sItem.title);\n            }\n          });\n        }\n      });\n      return titleArray;\n    };\n\n    this.handleClick = item => {\n      const currentKey = '/' + item.key.split('/')[1];\n      const pathname = item.key;\n      const titleArray = SiderBar.that.selectBreadcrumb(currentKey, pathname);\n      this.props.handleClick(titleArray);\n    };\n\n    this.onCollapse = collapsed => {\n      this.setState({\n        collapsed\n      }); // true/false\n    };\n\n    this.state = {\n      collapsed: false,\n      menuList: [],\n      defaultOpenKeys: [],\n      // 默认展开\n      defaultSelectedKeys: ['/'] // 默认选中\n\n    };\n    SiderBar.that = this;\n  }\n\n  componentWillMount() {\n    this.handleDefaultSelect();\n    const menuList = this.setMenu(menuConfig);\n    this.setState({\n      menuList\n    });\n  } // 刷新页面，处理默认选中\n\n\n  render() {\n    let name;\n\n    if (!this.state.collapsed) {\n      name = React.createElement(\"span\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"React\\u7BA1\\u7406\\u540E\\u53F0\");\n    }\n\n    return React.createElement(Sider, {\n      collapsible: true,\n      collapsed: this.state.collapsed,\n      onCollapse: this.onCollapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"logo-img\",\n      src: logoURL,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), name), React.createElement(Menu, {\n      onClick: this.handleClick,\n      theme: \"dark\",\n      defaultOpenKeys: this.state.defaultOpenKeys,\n      defaultSelectedKeys: this.state.defaultSelectedKeys,\n      mode: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.menuList), React.createElement(\"button\", {\n      onClick: this.HandleC.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"\\u4F20\\u9012params\\u53C2\\u6570\"), React.createElement(\"button\", {\n      onClick: this.HandleC2.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"\\u4F20\\u9012paramsData\\u53C2\\u6570\"), React.createElement(\"button\", {\n      onClick: this.HandleC3.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"\\u4F20\\u9012query\\u53C2\\u6570\"), React.createElement(\"button\", {\n      onClick: this.HandleC4.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"\\u4F20\\u9012state\\u53C2\\u6570\"));\n  } // 测试react-router\n\n\n  HandleC() {\n    this.props.history.push(\"/route/Lisi\");\n  }\n\n  HandleC2() {\n    let data = {\n      id: 3,\n      name: \"sam\",\n      age: 36\n    };\n    data = JSON.stringify(data);\n    this.props.history.push(\"/routeData/\".concat(data));\n  }\n\n  HandleC3() {\n    let data = {\n      id: 3,\n      name: \"sam\",\n      age: 36\n    };\n    let path = {\n      pathname: '/Query',\n      query: data\n    };\n    this.props.history.push(path);\n  }\n\n  HandleC4() {\n    let data = {\n      id: 3,\n      name: \"sam\",\n      age: 36\n    };\n    let path = {\n      pathname: '/State',\n      state: data\n    };\n    this.props.history.push(path);\n  }\n\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleClick(titleArray) {\n      dispatch(switchMenu(titleArray));\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SiderBar);","map":{"version":3,"sources":["E:\\Project\\reactpro\\react-antDesgin-admin\\src\\components\\layout\\SiderBar.js"],"names":["React","NavLink","Menu","Icon","Layout","menuConfig","logoURL","connect","switchMenu","Sider","SubMenu","SiderBar","Component","constructor","props","handleDefaultSelect","menuConfigKeys","forEach","item","push","key","pathname","window","location","console","log","split","currentKey","titleArray","selectBreadcrumb","indexOf","setState","defaultOpenKeys","defaultSelectedKeys","handleClick","setMenu","menu","pItem","map","children","icon","title","sItem","that","onCollapse","collapsed","state","menuList","componentWillMount","render","name","HandleC","bind","HandleC2","HandleC3","HandleC4","history","data","id","age","JSON","stringify","path","query","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { Menu, Icon, Layout } from 'antd';\nimport menuConfig from '../../config/menuConfig';\nimport logoURL from '../../images/logo.jpeg';\nimport { connect } from 'react-redux';\nimport { switchMenu } from '../../redux/action';\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\n\n\n\nclass SiderBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: false,\n      menuList: [],\n      defaultOpenKeys: [],       // 默认展开\n      defaultSelectedKeys: ['/'],   // 默认选中\n    };\n    SiderBar.that = this;\n  }\n\n  componentWillMount() {\n    this.handleDefaultSelect();\n    const menuList = this.setMenu(menuConfig);\n    this.setState({\n      menuList\n    });\n  }\n\n  // 刷新页面，处理默认选中\n  handleDefaultSelect = () => {\n    let menuConfigKeys = [];\n    menuConfig.forEach((item) => {\n      menuConfigKeys.push(item.key);\n    });\n    // console.log(menuConfigKeys) //  ['/', '/user', '/tool', '/route']\n    const pathname = window.location.pathname;\n    console.log(pathname)\n    console.log(pathname.split('/')[1])\n    const currentKey = '/' + pathname.split('/')[1];\n    const titleArray = this.selectBreadcrumb(currentKey, pathname);\n    if (menuConfigKeys.indexOf(currentKey) === 1) {\n      this.setState({\n        defaultOpenKeys: [currentKey],\n        defaultSelectedKeys: [pathname],\n      });\n      this.props.handleClick(titleArray);\n    }\n  };\n\n  // 处理菜单列表\n  setMenu = (menu, pItem) => {\n    return menu.map((item) => {\n      if (item.children) {\n        return (\n          <SubMenu key={ item.key }\n                   title={ <span><Icon type={ item.icon }/><span>{ item.title }</span></span> }>\n            { this.setMenu(item.children, item) }\n          </SubMenu>\n        )\n      }\n      return (\n        <Menu.Item title={ item.title } key={ item.key } pitem={ pItem }>\n          <NavLink to={ item.key } >\n            { item.icon && <Icon type={ item.icon }/> }\n            <span>{ item.title }</span>\n          </NavLink>\n        </Menu.Item>\n      )\n    });\n  };\n\n  // 导出出面包屑数组\n  selectBreadcrumb = (currentKey, pathname) => {\n    const titleArray = [];\n    menuConfig.forEach((item) => {\n      if (item.key === currentKey) {\n        titleArray.push(item.title);\n      }\n      if (item.children) {\n        item.children.forEach((sItem) => {\n          if (sItem.key === pathname) {\n            titleArray.push(sItem.title);\n          }\n        });\n      }\n    });\n    return titleArray;\n  };\n\n  // 点击侧边栏 -- redux\n  handleClick = (item) => {\n    const currentKey = '/' + item.key.split('/')[1];\n    const pathname = item.key;\n    const titleArray = SiderBar.that.selectBreadcrumb(currentKey, pathname);\n    this.props.handleClick(titleArray);\n  };\n\n  // 收缩侧边栏\n  onCollapse = collapsed => {\n    this.setState({ collapsed }); // true/false\n  };\n\n\n  \n  render() {\n    let name;\n    if (!this.state.collapsed) {\n      name = <span className=\"name\">React管理后台</span>;\n    }\n    return (\n      <Sider collapsible collapsed={ this.state.collapsed } onCollapse={ this.onCollapse }>\n        <div className=\"logo\">\n          <img className=\"logo-img\" src={ logoURL } alt=\"\"/>\n          { name }\n        </div>\n        <Menu\n          onClick={ this.handleClick } theme=\"dark\"\n          defaultOpenKeys={ this.state.defaultOpenKeys }\n          defaultSelectedKeys={ this.state.defaultSelectedKeys }\n          mode=\"inline\"\n        >\n          { this.state.menuList }\n        </Menu>\n\n        <button onClick={this.HandleC.bind(this)}>传递params参数</button>\n        <button onClick={this.HandleC2.bind(this)}>传递paramsData参数</button>\n        <button onClick={this.HandleC3.bind(this)}>传递query参数</button>\n        <button onClick={this.HandleC4.bind(this)}>传递state参数</button>\n      </Sider>\n    );\n  }\n\n\n  // 测试react-router\n  HandleC () {\n    this.props.history.push(\"/route/Lisi\")\n  }\n  HandleC2 () { \n    let data = {id:3,name:\"sam\",age:36};\n    data = JSON.stringify(data);\n    this.props.history.push(`/routeData/${data}`)\n  }\n  HandleC3 () { \n    let data = {id:3,name:\"sam\",age:36};\n    let path = {\n      pathname:'/Query',\n      query: data,\n    }\n    this.props.history.push(path)\n  }\n  HandleC4 () { \n    let data = {id:3,name:\"sam\",age:36};\n    let path = {\n      pathname:'/State',\n      state: data,\n    }\n    this.props.history.push(path) \n  }\n}\n\nconst mapStateToProps = () => {\n  return {}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleClick(titleArray) {\n      dispatch(switchMenu(titleArray));\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SiderBar);\n"]},"metadata":{},"sourceType":"module"}