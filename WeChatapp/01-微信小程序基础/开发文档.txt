微信小程序笔记==>



微信开发者文档：https://developers.weixin.qq.com/miniprogram/dev/framework/


Day01: (页面数据详情：调试器/AppData)

    一、能够知道如何创建小程序项目
        微信开发者工具的使用、appID 的获取

    二、能够清楚小程序项目的基本组成结构
        app.js、app.json、app.wxss、pages 文件夹

    三、能够知道小程序页面由几部分组成
        wxml、wxss、json、js

    四、能够知道小程序中常见的组件如何使用
        view、text、image

    五、能够知道小程序如何进行协同开发和发布
        成员管理、发布小程序、查看运营数据



Day02: (页面数据详情：调试器/AppData)

    WXML模板语法

    WXSS模板样式

    全局配置(app.json) 文件及常用的配置项：1、Pages   2、window    3、tarBar   4、style
        1、配置Window：导航背景、导航标题、导航颜色、能够下拉刷新、触底距离
        2、配置tabBar：首页、消息、联系我们
    
    页面配置：常用项
        navigationBarBackgroundColor、navigationBarTextStyle、enablePullDownRefresh、onReachBottomDistance
        mp_02 -> pages -> message -> message.json配置  message页面配置项 
        不一定要全部配置下拉刷新、有的页面不需要下拉刷新功能
    
    网络数据请求 
        网络数据请求出于安全性, 限制
            1、只能请求https类型的接口
            2、必须将接口的域名添加到信任列表中
        配置request合法域名
            需求描述：假设自己的微信小程序中，希望请求https://www.escook.cn/ 域名下的接口
            配置步骤: 登陆微信小程序管理后台、开发、开发设置、服务器域名、修改request合法域名
        配置request合法域名
        跳过request合法域名校验
        关于跨域和Ajax说明

    实现本地生活案例(总结今日所学内容)



Day03: (页面数据详情：调试器/AppData)

    能够知道如何实现页面之间的导航跳转
    能够知道如何实现下拉刷新效果
    能够知道如何实现上拉加载更多效果
    能够知道小程序中常用的声明周期函数
 
    页面导航跳转：(mp_03)
        声明式导航
            1、导航到tarBar页面
            2、导航跳转到非tabBar页面
            3、后退导航 <navigator open-type='navigateBack' delta='1'>返回上一页</navigator>
        编程式导航
            1、导航到tarBar页面
            2、导航跳转到非tabBar页面
            3、后退导航

    页面事件：
        下拉刷新案例(/pages/messagejs)

        上拉触底案例(/pages/contactjs) 
            上拉触底节流案例：对上拉触底进行节流处理
                1、在data中定义isloading节流阀
                    false表示当前没有任务数据请求
                    true表示当前正在进行数据请求
                2、在getColors()方法中修改isloading节流阀的值
                    在刚调用getColors时将节流阀设置true
                    在网络请求的complete回调函数中，将节流阀重置为false
                3、在onReachBottom中判断节流阀的值、从而对数据请求进行节流控制
                    如果节流阀的值为true、则组件当前请求
                    如果节流阀的值为false、则发起数据请求
        
    添加编译模式(启动页面/启动参数)

    (页面数据详情：调试器/AppData)

    渲染九宫格数据(页面设计)

    生命周期的分类：
        1、应用生命周期(app.js)
            特指小程序从启动、运行、销毁期间依次调用的那些函数

        2、页面生命周期(Page每个页面)
            特指小程序中，每个页面从加载、渲染、销毁期间依次调用的那些函数
        
    wxs语法：不支持ES6高级语法、数据类型和js基本相同(无undefined、null)、wxs遵循commonjs规范(module, require(), module.exports)
        内嵌wxs脚本(/pages/message/message.wxml)
        外联wxs脚本(/pages/message/message.wxml) 

    本地生活案例
        1、在AppData中查看数据变化   网络改为3g
        2、调试器  --> 查看网络 --> xhr的数据变化(下拉触底)
        3、在普通编译、自定义编译  ||  启动页面：pages/shoplist/shoplist   ||   启动参数：id=1&title=美食
        4、上拉触底实现过程： 
            4.1、将触底距离改为200rpx
            4.2、在onReachBottom函数中让page+1
            4.3、再重新调用getShopList函数
        5、total: res.header['X-Total-Count'] - 0,    /// total(总数据条数)   ：字符串类型转换为数字类型
        6、接口地址：https://www.escook.cn/categories/:cate_id/shops
        7、请求地址：https://www.escook.cn/categories/${this.data.query.id}/shops
        8、如果下面公式成立,则证明没有下一页数据了
            页码值 * 每页显示多少条数据 >= 总数据条数   page * pageSizi >= total
        9、下拉刷新需要重置一些数据
            9.1、重置关键性数据
            9.2、根据关键性数据重新发起请求 
            9.3、先下拉让page为3、再上拉查看AppData中的数据是否改变
        10、wxs处理手机号脚本