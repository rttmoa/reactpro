<!--index.wxml-->



<!-- 一、数据绑定 -->
<view>{{info}}</view>
<image src="{{imgSrc}}" mode="widthFix"></image>
<view>{{randomNum1 >= 5 ? '数字大于或等于5' : '数字小于5'}}</view>
<view>{{randomNum2 * 100}}</view>




<!-- 二、事件绑定：  事件是渲染层到逻辑层的通讯方式 -->
<!-- 小程序中常用事件：tap(点击)、input(输入)、change(onChange) -->
<!-- 小程序的事件传参比较特殊、不能在绑定事件的同时为事件处理函数传递参数     需要 data-*  自定义属性传参 -->
<!-- <button type="primary" bindtap="btnTapHandler(123)">按钮</button> -->

<button type="primary" bindtap="btnTapHandler">按钮</button>
<button type="primary" bindtap="CountChange">+1</button>
<button type="primary" bindtap="btnTap2" data-info="{{2}}">+2</button>
<input value="{{msg}}" bindinput="inputHandler"></input>



<!-- 三、条件渲染： 使用wx:if="{{condition}}"来判断是否需要渲染该代码块 -->
<view wx:if="{{type === 1}}">男</view>
<view wx:elif="{{type === 2}}">女</view>
<view wx:else>保密</view>

<!-- 如果一次性控制多个组件的展示与隐藏，可以使用 block 标签将多个组件包起来，并在block标签上使用wx:if控制属性 -->
<!-- 注意：block并不是一个组件，它只是一个包裹性质的容器，不会在页面中做任何渲染    View会渲染出 -->
<block wx:if="{{false}}">
	<view>view1</view>
	<view>view2</view>
</block>

<!-- 控制元素显示与隐藏的方式： wx:if(以动态创建和移除元素的方式)    hidden(以切换样式方式display:none/block)  -->
<view hidden="{{!flag}}">条件为 true 的时候隐藏元素，否则显示</view>
<view wx:if="{{flag}}">这是使用 wx:if 控制的元素</view>
<!-- 使用建议：频繁切换使用hidden、、控制条件复杂时使用wx:if,wx:elif,wx:else -->





<!-- 四、列表渲染 -->
<!-- 手动指定索引和当前项的变量名 -->
<!-- 指定key值提高渲染效率 -->
<view wx:for="{{arr1}}" wx:key="index">
	索引是：{{index}}, item 项是：{{item}}
</view>

<view>~~~~~~</view>

<view wx:for="{{arr1}}" wx:for-index="idx" wx:for-item="itemName" wx:key="idx">
	索引是：{{idx}}: item 项是：{{itemName}}
</view>

<view>~~~~~~</view>

<!-- class使用的是common中导入的样式 -->
<view wx:for="{{userList}}" wx:key="id" class="username">{{item.name}}</view>