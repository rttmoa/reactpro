前端开发人员会涉及的移动端产品：
  + NativeApp
    + 原始开发方案：安卓开发「java-native」、IOS开发「object-c(OC)、swift」
    + 新开发方案：uni-app「vue.js」、react-native「react.js」、flutter「dart」...
  + WebApp
    + 就是HTML5页面，放在移动端浏览器或者App中运行
    + 技术栈：html、css、js、vue、react...
  + 小程序
    + 是根据对应的语法「微信小程序、支付宝小程序、抖音小程序...」去开发；最后部署到相关的App中{无需下载，直接在App内部运行调用}；
    + 小程序开发是前端的任务
    + 小程序难不难？只要会vue/react，就会小程序；前端开发者会基于现有的技术，去实现小程序的开发「例如：uni-app、taro...」

移动端开发需要注意的问题：
  @1 页面样式和布局「响应式布局开发」
   + flex不是响应式方案，它是布局排版方案！！
   + 某些复杂的PC端官网，是无需做响应式的「因为：PC端和移动端是两套项目，PC端采用固定布局」，例如：京东...
   + PC端和移动端共用一个项目，例如：企业官网等结构样式较简单的
     首先按照PC端开发，再基于@media(媒体查询)，在不同的尺寸下，设置不同的样式！
     核心：在不同/常用的设备尺寸下，我们基于@media编写多套样式、稍微改变一下结构排版等即可！！
     .swiper{
        width:800px;
        height:400px;
     }
     @media all and (max-width:960px){
        .swiper{
          width:600px;
          height:300px;
        }
     }
     @media all and (max-width:480px){
        .swiper{
          width:100%;
          height:150px;
        }
     }
  + PC端全屏项目，例如：管理系统...
    主体布局方案基于“百分比”实现「也就是：vw/vh」，里面内容一般是固定布局！！
    再基于@media做结构和样式上的微调！
  + 移动端产品，基本必做响应式，以此来适配不同型号的手机！
    最主流的开发方案就是REM响应式布局开发！！
    比较特殊的例子：移动端全屏项目
      + 我们基于“百分比”构建外层框架「百分比可以用?%，也可以基于?vw/vh」
      + 里面具体详细的内容，基于rem实现等比缩放
      + 最后整体可能需要基于@media微调

 @2关于移动端兼容问题
   + 样式的兼容
     移动端设置的CSS3样式，为了兼容大部分手机「包括低端机型」，我们此时需要设置前缀
     .box{
        -webkit-transition:all 1s;
        transition:all 1s;
     }
     真实项目中，我们可以基于一些插件「或者webpack中的插件」进行处理
       + prefixfree.min.js 导入这个JS，会自动设置前缀
       + webpack:browserlist + postcss + autoprefixer

=========================
REM响应式布局方案：
  设置样式值，遇到的单位
   + px 像素「固定单位」
   + % 或者 vw/vh 「百分比单位」
   + em 「相对单位：相对于父容器字体大小」
   + rem：root em 「相对单位：相对于根元素(html)的字体大小」
   + ...
  html{
    font-size:20px; // 1rem=20px
  }
  .box{
    //width:200px;  @1
    width:10rem;    @2
  }
  这两种写法“此时”没有任何的区别，最后会是相同的大小！！
  如果后期我修改了html的字体大小（例如：修改为30px，也就是1rem=30px），如果按照@1的写法，盒子依然是200px，但是如果按照@2的写法，盒子自动缩放到300px！！==> 只要修改REM和PX的换算比例（也就是HTML的字体大小），那么所有以REM为单位的样式，都会自动缩放「达到了整体缩放的效果」！！
  --------------
  开发的具体步骤:
  @1 从设计师手里拿到设计稿
    + 设计稿一般是 750px 的？「参照iphone6+（375px）」
  @2 严格按照750的尺寸去开发，只不过用rem作为单位
    + 设定750尺寸中，REM和PX的换算比例
      html{
        font-size:100px;  //750 1REM=100PX
      }
    + 所有测量出来的像素值，都除以100，变为rem单位
      .box{
        width:3.25rem;
        height:2rem;
        font-size:.32rem;
      }
  @3 监测手机屏幕的大小，例如：360，我们只需要改变html的字体大小即可
     html.fontSize=360/(750/100)+'px';
     REM和PX的换算比例一变，则所有rem单位的值都会跟着缩放！！
  @4 我们一般会设置一个边界，例如：超过750，则不再继续放大（最大1REM=100PX）,而且让内容处于版心，左右留空白即可！！